{
	"name": "Ingest MMS data via DataLake",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Set variable StartTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DataLakeBlobFile",
						"type": "DatasetReference",
						"parameters": {
							"FolderName": {
								"value": "@pipeline().parameters.SourceFolderName",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							},
							"DelimiterChar": {
								"value": "@pipeline().parameters.DelimiterChar",
								"type": "Expression"
							},
							"WithHeader": true,
							"ContainerName": {
								"value": "@pipeline().parameters.SourceContainerName",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"itemName",
						"itemType",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Copy data to internal table",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "@{concat('truncate table ',\npipeline().parameters.StageSchemaName,\n'.',\npipeline().parameters.StageTableName)}",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DataLakeBlobFile",
						"type": "DatasetReference",
						"parameters": {
							"FolderName": {
								"value": "@pipeline().parameters.SourceFolderName",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							},
							"DelimiterChar": {
								"value": "@pipeline().parameters.DelimiterChar",
								"type": "Expression"
							},
							"WithHeader": {
								"value": "@pipeline().parameters.WithHeader",
								"type": "Expression"
							},
							"ContainerName": {
								"value": "@pipeline().parameters.SourceContainerName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ConfigTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": {
								"value": "@pipeline().parameters.StageSchemaName",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.StageTableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Copy data to DL file",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy data to internal table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@pipeline().parameters.ExportQuery",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ConfigTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": {
								"value": "@pipeline().parameters.StageSchemaName",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.StageTableName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CDP_Internal_CSV",
						"type": "DatasetReference",
						"parameters": {
							"ContainerName": {
								"value": "@pipeline().parameters.ExportContainerName",
								"type": "Expression"
							},
							"FilePath": {
								"value": "@pipeline().parameters.ExportFolderName",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.ExportFileName",
								"type": "Expression"
							},
							"EscapeChar": {
								"value": "@pipeline().parameters.EscapeChar",
								"type": "Expression"
							},
							"DelimiterChar": {
								"value": "@pipeline().parameters.ExportDelimiterChar",
								"type": "Expression"
							},
							"WithHeader": {
								"value": "@pipeline().parameters.WithHeader",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set variable StartTime",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "StartTime",
					"value": {
						"value": "@string(utcNow())",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"SourceFolderName": {
				"type": "string",
				"defaultValue": "MMSODBC/mm4r6lib_odbc_QA/2023/09/13/"
			},
			"FileName": {
				"type": "string",
				"defaultValue": "MM4R6ITL.CDPHDRF.csv"
			},
			"DelimiterChar": {
				"type": "string",
				"defaultValue": "|"
			},
			"ExportFolderName": {
				"type": "string",
				"defaultValue": "MMS/2023/09/14/"
			},
			"ExportFileName": {
				"type": "string",
				"defaultValue": "MM4R6ITL.CDPHDRF.csv"
			},
			"ExportDelimiterChar": {
				"type": "string",
				"defaultValue": "|"
			},
			"StageSchemaName": {
				"type": "string",
				"defaultValue": "MMS"
			},
			"StageTableName": {
				"type": "string",
				"defaultValue": "Raw_CDPHDRF"
			},
			"WithHeader": {
				"type": "bool",
				"defaultValue": true
			},
			"EscapeChar": {
				"type": "string",
				"defaultValue": "\""
			},
			"ExportQuery": {
				"type": "string",
				"defaultValue": "select top 1000 * from MMS.Raw_CDPHDRF"
			},
			"ExportContainerName": {
				"type": "string",
				"defaultValue": "raw"
			},
			"SourceContainerName": {
				"type": "string",
				"defaultValue": "raw"
			},
			"DataCopyMappingPK": {
				"type": "int"
			}
		},
		"variables": {
			"StartTime": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Ingestion/subpipelines"
		},
		"annotations": []
	}
}